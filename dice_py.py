# -*- coding: utf-8 -*-
"""dice.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1K19c8s9I_DjyE8kHtNmMT5WPpLyvhk-w
"""

import random

again = True
while again:
  print (random.randint(1,6))
  another_roll = input("want to roll the dice again : YES/NO ")
  if another_roll =="YES":
   continue
  else:
    break;

import random   #library to generate random varibale

!pip install art  #for font

from art import *
tprint("DICE     ROLLING") # print ASCII text (default font) 

a=input("roll the dice : Y/N ")

def roll_dice(): #function to generate random number
   global b  #global because we gonna use b in different function
   b = random.randint(1,6)  #generate random varaible
   
def image():  #function to generate image of dice
 import cv2
 from google.colab.patches import cv2_imshow
 image= cv2.imread("/content/{random_variable}.jpg".format(random_variable=b)) #("/content/{noun}.jpg".format(noun=b)) -- use varaoble in a string of sentance 
                                                                               #define path of image
 cv2_imshow (image)

while a=="Y":
  roll_dice() #fun to generate random no.
  image() # to show immage dedicate to random var
  c=input("roll the dice AGAIN : Y/N ")  #if want to roll dice again use while loop again 
  if c=="Y":
    continue
  else:  
   print("invalid input // end ") 
   break

aa="/content/{q}.jpg".format(q=b)
print(aa)

cap = cv.VideoCapture('/content/garden.mp4')

# importing libraries
import cv2
import numpy as np
   
# Create a VideoCapture object and read from input file
cap = cv2.VideoCapture('/content/garden.mp4')
   
# Check if camera opened successfully
if (cap.isOpened()== False): 
  print("Error opening video  file")
   
# Read until video is completed
while(cap.isOpened()):
      
  # Capture frame-by-frame
  ret, frame = cap.read()
  if ret == True:
   
    # Display the resulting frame
    cv2.imshow('Frame', frame)
   
    # Press Q on keyboard to  exit
    if cv2.waitKey(25) & 0xFF == ord('q'):
      break
   
  # Break the loop
  else: 
    break
   
# When everything done, release 
# the video capture object
cap.release()
   
# Closes all the frames
cv2.destroyAllWindows()